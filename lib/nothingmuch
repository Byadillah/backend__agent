class _ControlText {

  TextEditingController _textcontroller = TextEditingController();

  List<dynamic> quotes  = [
    'thanks to the 20 bandos',
    "I'm happier than ever",
    "Gosh! it's brutal out here",
    "genz quant kids the 20 bandos",
    'things gonna be amazing'
  ];


  printquote() {
    List record = <Widget>[];
    for (var i = 0; i < quotes.length; i++){
      record.add(MessageBubbleRight(message: quotes[i]));
    }
    return record;
  }



  // TEXT INPUT
  Widget _Textinput() {
    return Padding(
      padding: const EdgeInsets.fromLTRB(0,0,0,10),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
        children: [
          SizedBox(
            width: 300,
            child: TextField(
              controller: _textcontroller,
              decoration: InputDecoration(
                border: OutlineInputBorder(borderRadius: BorderRadius.circular(10)),
                hintText: 'start typing ...',
              ),
            ),
          ),
          CircleAvatar(
            radius: 23,
            child: IconButton(
              onPressed: () {
                quotes.add('${_textcontroller.text}');

                print(quotes);
                var txt = printquote();
                print(txt);
                _textcontroller.clear();

              },
              icon: Icon(
                Icons.send,
                color: Colors.deepPurple,
              ),
            ),
          ),
        ],
      ),
    ) ;
  }

}








////////////////////// first Attempts

import 'dart:collection';

import 'package:flutter/material.dart';
import 'message_bubble.dart';



class CustomPage extends StatefulWidget {
  const CustomPage({super.key});


  @override
  State<CustomPage> createState() => _CustomPageState();
}

class _CustomPageState extends State<CustomPage> {

  ////
  TextEditingController _textcontroller = TextEditingController();
  List<dynamic> quotes  = [
    'thanks to the 20 bandos',
    "I'm happier than ever",
    "Gosh! it's brutal out here",
    "genz quant kids the 20 bandos",
    'things gonna be amazing'
  ];

  List record = <Widget>[];

  @override
  void initState() {
    for (var i = 0; i < quotes.length; i++){
      record.add(MessageBubbleRight(message: quotes[i]));
    }
    // TODO: implement initState
    super.initState();
  }
  printquote() {
    int x = 1;
    if (_textcontroller.text.isNotEmpty && (x%2 == 0)){
      quotes.add('${_textcontroller.text}');
      for (var i = 0; i < quotes.length; i++){
        record.add(MessageBubbleRight(message: quotes[i]));
      }
      _textcontroller.clear();
      x = x+1;
      return record;
    }
    else if (_textcontroller.text.isNotEmpty && (x%2 != 0)) {
      quotes.add('${_textcontroller.text}');
      for (var i = 0; i < quotes.length; i++){
        record.add(MessageBubble(message: quotes[i]));
      }
      _textcontroller.clear();
      x = x+1;
      return record;

    } else {
      for (var i = 0; i < quotes.length; i++){
        record.add(MessageBubbleRight(message: quotes[i]));
      }
      return record;
    }
  }



  Widget _Textinput() {
    return Padding(
      padding: const EdgeInsets.fromLTRB(0,0,0,10),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
        children: [
          SizedBox(
            width: 300,
            child: TextField(
              controller: _textcontroller,
              decoration: InputDecoration(
                border: OutlineInputBorder(borderRadius: BorderRadius.circular(10)),
                hintText: 'start typing ...',
              ),
            ),
          ),
          CircleAvatar(
            radius: 23,
            child: IconButton(
              onPressed: () {
                setState(() {
                });
              },
              icon: Icon(
                Icons.send,
                color: Colors.deepPurple,
              ),
            ),
          ),
        ],
      ),
    ) ;
  }
  ////




  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Column(
        children: [

          Container(
            height: 150,
            decoration: BoxDecoration(
              color: Colors.deepPurple,
            ),
            child: Padding(
              padding: EdgeInsets.fromLTRB(12, 20, 0, 0),
              child: Row(
                children: [
                  CircleAvatar(
                    backgroundImage: AssetImage('lib/images/tinker.jpg'),
                    radius: 30,
                  ),
                  SizedBox(width: 20,),
                  Text(
                      'Tinker Bell',
                      style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.white,
                      ),
                  ),
                ],
              ),
            ),
          ),

          Expanded(child: ListView(
            padding: EdgeInsets.symmetric(horizontal: 20,vertical: 10),
            reverse: false,
            children: printquote(),
          ),
            /*SizedBox(width: double.infinity,),*/),
          _Textinput(),
        ],
      ),
    );

  }



}








